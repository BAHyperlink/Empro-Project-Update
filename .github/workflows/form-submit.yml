name: Form Submit (Multi-Project)

on:
  workflow_dispatch:
    inputs:
      PROJECTS_JSON:
        description: >-
          JSON array of projects. Example:
          [
            {"project_url":"https://.../details/MTQ2Mg==","comm_type":"Microsoft Team","comm_with_client":"Successfully Communicated","call_types":"Call, Follow up","comments":"Talked; next steps shared"},
            {"project_url":"https://.../details/MTQ2Nw==","comm_type":"Phone Call","comm_with_client":"Communicate Can Not Be Done","call_types":["Client Reply","Technical discussion"],"comments":"No answer; emailed summary"}
          ]
        required: true
        type: string

permissions:
  contents: read

concurrency:
  group: form-submit-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Playwright (Chromium)
        run: |
          npm init -y
          npm install playwright
          npx playwright install --with-deps chromium

      # Optional: quick sanity check for PROJECTS_JSON being valid JSON array
      - name: Validate PROJECTS_JSON
        run: |
          node -e '
            const s = process.env.PROJECTS_JSON || "";
            let v;
            try { v = JSON.parse(s); } catch (e) { console.error("Invalid JSON:", e.message); process.exit(1); }
            if (!Array.isArray(v) || v.length === 0) { console.error("PROJECTS_JSON must be a non-empty array"); process.exit(1); }
            console.log("Projects:", v.length);
          '
        env:
          PROJECTS_JSON: ${{ github.event.inputs.PROJECTS_JSON }}
      - name: Run automation (multi-project batch)
        run: node automation.js
        env:
          LOGIN_URL: https://reporting.hyperlinkinfosystem.net.in/manager/login
          LOGIN_USERNAME: ${{ secrets.LOGIN_USERNAME }}
          LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
      
          PROJECTS_JSON: ${{ github.event.inputs.PROJECTS_JSON }}
          CALL_LOG_BUTTON_SELECTOR: 'button[data-target="#call_log_model"]'
      
          # NEW â€” set this to your real menu anchor that opens the list
          PROJECT_LIST_MENU_SELECTOR: 'a[href="/manager/project"]'
          # Optional: something that proves the list rendered (table, heading, etc.)
          PROJECT_LIST_READY_SELECTOR: 'a[href*="/manager/project/details/"]'

      - name: Upload artifacts (screenshots, modal snaps)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: artifacts
